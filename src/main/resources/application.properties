spring.datasource.url=jdbc:mysql://localhost/screenmatch?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=Hardtriplol123!

#Precisaremos implementar a exclusão de filmes, para isso, teremos que enviar uma requisição do tipo DELETE.
#
#Para que seja possível fazer isso, iremos já disponibilizar para você uma propriedade que deverá ser incluída no arquivo application.properties.
#
#A linha que deverá ser incluída quando tivermos implementando no vídeo é:
#O filtro "spring.mvc.hiddenmethod.filter", que por padrão vem desabilitado, é usado para tratar requisições HTTP em que o método HTTP utilizado é definido no corpo da requisição, em vez de ser especificado diretamente na URL ou no verbo HTTP. Ele permite que você especifique o método que deseja executar através de um parâmetro oculto no corpo da requisição.
#
#Ao configurar o filtro spring.mvc.hiddenmethod.filter.enabled=true no Spring MVC, ele intercepta as requisições e examina o corpo da requisição em busca desse parâmetro oculto, que normalmente é chamado "_method". Se ele encontrar esse parâmetro, o filtro altera o método da requisição para corresponder ao valor especificado nesse parâmetro.
#
#Esse recurso é útil em situações em que você deseja fazer uma requisição que não seja GET ou POST, que são as padrões suportadas no html ao utilizar a tag form method, por exemplo. Ao usar o filtro "spring.mvc.hiddenmethod.filter" e enviar uma requisição POST com o parâmetro oculto "_method" definido como "DELETE" ou "PUT", o filtro interpreta e executa a ação apropriada no servidor.
spring.mvc.hiddenmethod.filter.enabled=true